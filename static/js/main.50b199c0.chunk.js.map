{"version":3,"sources":["components/SearchBar.js","actions/types.js","api/api.js","components/CommentList.js","actions/index.js","components/modal.js","components/ImageCard.js","components/ImageList.js","components/App.js","reducer/index.js","index.js"],"names":["SearchBar","state","term","search","e","preventDefault","props","onSearchSubmit","className","onSubmit","this","type","value","placeholder","onChange","event","setState","target","showButton","React","Component","UNLIKE","LIKE","ADD_POST","DELETE_POST","FETCH_IMAGES","SORT","api","axios","create","baseURL","connect","deletePost","listid","id","payload","comments","map","el","i","onClick","uuid","show","image","handleClose","showHideClassName","ReactDOM","createPortal","stopPropagation","src","url","alt","Flowers","document","querySelector","ImageCard","showModal","hideModal","bind","addPost","likedByMe","unlike","style","marginLeft","href","like","likes","float","category","images","showPicture","ImageList","generateImage","length","Fragment","App","fetchImages","marginTop","sort","dispatch","a","imageApi","get","data","pics","filter","ele","toLowerCase","includes","INITIAL_STATE","combineReducers","action","index","findIndex","newArray","unshift","deleteFromindex","imgArr","splice","ind","newImage","newArrayImage","Sorted","slice","b","Array","isArray","render","store","createStore","Reducers","applyMiddleware","reduxThunk"],"mappings":"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","file":"static/js/main.50b199c0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './ImageList.css'\r\n\r\nclass SearchBar extends React.Component{\r\n    state={term:\"\"}\r\n    search=(e)=>{\r\n        e.preventDefault()\r\n        this.props.onSearchSubmit(this.state.term)\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n                // <div className=\"segment\">\r\n                //     <div className=\"left-segment\">\r\n                //     <a className=\"linkbutton\">Most Liked</a>\r\n                //     |\r\n                //     <a className=\"linkbutton\">Most Commented</a>\r\n                //     </div>\r\n                //     <div className=\"right-segment\">\r\n                    <form className=\"form\" onSubmit={this.search}>\r\n                        <div className=\"field\">\r\n                            <input type=\"text\" \r\n                            value={this.state.term}\r\n                            placeholder=\"Search Images\"\r\n                            onChange={event=>this.setState({term:event.target.value})}/>\r\n                            {this.props.showButton?<button className=\"btn\" type=\"submit\">POST</button>:null}\r\n                            \r\n                        </div>\r\n                    </form>\r\n                //     </div>\r\n                    \r\n                // </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","export const UNLIKE='UNLIKE';\r\nexport const LIKE='LIKE';\r\nexport const ADD_POST=\"ADD_POST\";\r\nexport const DELETE_POST=\"DELETE_POST\";\r\nexport const FETCH_IMAGES=\"FETCH_IMAGES\";\r\nexport const SORT=\"SORT\"\r\n","import axios from 'axios';\r\nlet api=axios.create({\r\n    baseURL:\"https://raw.githubusercontent.com\"\r\n})\r\n\r\nexport default api;","import React from 'react';\r\nimport './ImageList.css';\r\nimport {deletePost} from './../actions';\r\nimport {connect} from 'react-redux'\r\nimport uuid from 'react-uuid'\r\n\r\nconst CommentList=(props)=>{\r\n    let deletePosts = (id)=>{\r\n        props.deletePost(id,props.comments.id)\r\n    }\r\n    let generateList=({comments})=>{\r\n        return comments.map((el,i)=>{\r\n            return (<li key={uuid()}>{el} <span onClick={()=>deletePosts(i)} className=\"close\">X</span></li>)\r\n        })\r\n    }\r\n    \r\n    return (<ol>\r\n        {generateList(props.comments)}\r\n      </ol>)\r\n}\r\n\r\nexport default connect(null,{deletePost})(CommentList);","import {FETCH_IMAGES,ADD_POST,LIKE,UNLIKE,SORT,DELETE_POST} from './types'\r\nimport imageApi from './../api/api';\r\nexport const like=(id)=>{\r\n    return {\r\n        type: LIKE,\r\n        payload:id\r\n    }\r\n}\r\n\r\nexport const unlike=(id)=>{\r\n    return {\r\n        type: UNLIKE,\r\n        payload:id\r\n    }\r\n}\r\nexport const sort=(id)=>{\r\n    return {\r\n        type: SORT,\r\n        payload:id\r\n    }\r\n}\r\nexport const addPost=(value,id)=>{\r\n    return {\r\n        type: ADD_POST,\r\n        payload:{value,id}\r\n    }\r\n}\r\nexport const deletePost=(listid,id)=>{\r\n    return {\r\n        type: DELETE_POST,\r\n        payload:{listid,id}\r\n    }\r\n}\r\n\r\nexport const fetchImages=(term)=>async (dispatch)=>{\r\n    if(!term)\r\n        term=''\r\n    let images=await imageApi.get('/Lokenath/MyRepo/master/Test/package.json')\r\n    dispatch({\r\n        type: FETCH_IMAGES,\r\n        payload:images.data.pics.filter(ele=>ele.category.toLowerCase().includes(term))\r\n    })\r\n}","import ReactDOM from 'react-dom'\r\nimport {connect} from 'react-redux';\r\nimport './modal.css';\r\n\r\nconst Modal = ({ show, image,handleClose }) => {\r\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n   return ReactDOM.createPortal(\r\n    <div onClick={()=>handleClose()} className={showHideClassName}>\r\n        <div onClick={(e)=>e.stopPropagation()}>\r\n        <section className=\"modal-main\">\r\n        <img key={image.id} src={image.url} alt={image.Flowers}/>\r\n      </section>\r\n        </div>\r\n    </div>,document.querySelector('#modal')\r\n)\r\n}\r\n\r\nexport default connect(null)(Modal)","import React from 'react';\r\nimport './ImageList.css'\r\nimport SearchBar from './SearchBar'\r\nimport CommentList from './CommentList'\r\nimport {addPost,like,unlike} from './../actions'\r\nimport {connect} from 'react-redux';\r\nimport Modal from './modal'\r\nclass ImageCard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n          };\r\n        this.onSearchSubmit=this.onSearchSubmit.bind(this)\r\n    }\r\n    onSearchSubmit(term){\r\n        this.props.addPost(term,this.props.image.id)\r\n    }\r\n    showModal = () => {\r\n        this.setState({ show: true });\r\n      };\r\n    \r\n      hideModal = () => {\r\n        this.setState({ show: false });\r\n      };\r\n    showButton(){\r\n        if(this.props.image.likedByMe){\r\n            return <a onClick={(e)=>{e.preventDefault();this.props.unlike(this.props.image.id)}} style={{marginLeft:'5px'}} href=\"/#\">Unlike</a>\r\n        }else{\r\n            return <a onClick={(e)=>{e.preventDefault();this.props.like(this.props.image.id)}} style={{marginLeft:'5px'}} href=\"/#\">Like</a>\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"card\">\r\n                <div onClick={(e)=>{e.preventDefault();this.showModal()}} className=\"image-box\">\r\n                    <img key={this.props.image.id} src={this.props.image.url} alt={this.props.image.Flowers}/>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <div>\r\n                    <span>{this.props.image.likes} {this.showButton()}</span>\r\n                    <span style={{float:'right'}}>{this.props.image.category}</span>\r\n                    </div>\r\n                    <SearchBar showButton={true} onSearchSubmit={this.onSearchSubmit}/>\r\n                    <CommentList comments={this.props.image}/>\r\n                    {this.state.show?<Modal handleClose={this.hideModal} show={this.state.show} image={this.props.image} />:null}\r\n                    \r\n                </div>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return {show:state.images.showPicture}\r\n\r\n}\r\nexport default connect(mapStateToProps,{addPost,like,unlike})(ImageCard); ","import React from 'react';\r\nimport './ImageList.css'\r\nimport ImageCard from './ImageCard'\r\nimport uuid from 'react-uuid'\r\n\r\nclass ImageList extends React.Component{\r\n    generateImage=(image)=>{\r\n        return image.map((image)=>{\r\n            return <li key={uuid()}><ImageCard image={image} /></li>\r\n\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.props.image &&this.props.image.length?<React.Fragment><h5>Found: {this.props.image.length} images</h5>\r\n                \r\n                <div className=\"image-list\"><ul>{this.generateImage(this.props.image)}</ul></div></React.Fragment>:<div>No Images Found</div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ImageList;","import React from 'react';\r\nimport SearchBar from './SearchBar'\r\nimport ImageList from \"./ImageList\";\r\nimport {fetchImages,sort} from './../actions'\r\nimport {connect} from 'react-redux'\r\nimport './ImageList.css'\r\nclass App extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.onSearchSubmit=this.onSearchSubmit.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchImages('')\r\n\r\n    }\r\n    onSearchSubmit(term){\r\n        this.props.fetchImages(term)\r\n    }\r\n    render(){\r\n        return (\r\n        <div className=\"ui container\" style={{marginTop:'10px'}}>\r\n             <div className=\"segment\">\r\n                     <div className=\"left-segment\">\r\n                     <a onClick={(e)=>{e.preventDefault();this.props.sort('likes')}} style={{marginLeft:'5px'}} href=\"/#\">Most Liked</a>\r\n                     |\r\n                     <a onClick={(e)=>{e.preventDefault();this.props.sort('comments')}} style={{marginLeft:'5px'}} href=\"/#\">Most Commented</a>\r\n                     </div>\r\n                     <div className=\"right-segment\">\r\n            <SearchBar showButton={false} onSearchSubmit={this.onSearchSubmit}/>\r\n            </div>\r\n            </div>\r\n            <ImageList image={this.props.image}/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n        return {image:state.images.images}\r\n\r\n}\r\nexport default connect(mapStateToProps,{fetchImages,sort})(App);","import {combineReducers} from 'redux';\r\nimport { FETCH_IMAGES,ADD_POST,LIKE,UNLIKE,SORT,DELETE_POST} from \"./../actions/types\";\r\nconst INITIAL_STATE={\r\n    images:[],\r\n}\r\nconst images=(state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case FETCH_IMAGES:\r\n            return {...state,images:[...action.payload]}\r\n        case ADD_POST:\r\n            const index=state.images.findIndex(el=>el.id===action.payload.id)\r\n            const newArray=[...state.images]\r\n            newArray[index].comments.unshift(action.payload.value)\r\n            return {...state,images:newArray}\r\n        case DELETE_POST:\r\n            const deleteFromindex=state.images.findIndex(el=>el.id===action.payload.id)\r\n            const imgArr=[...state.images]\r\n            imgArr[deleteFromindex].comments.splice(action.payload.listid,1)\r\n            return {...state,images:imgArr}\r\n\r\n        case LIKE:\r\n            let ind=state.images.findIndex(el=>el.id===action.payload)\r\n            let newImage=[...state.images]\r\n            newImage[ind].likes+=1;\r\n            newImage[ind].likedByMe=true\r\n            return {...state,images:newImage}\r\n        case UNLIKE:\r\n            let id=state.images.findIndex(el=>el.id===action.payload)\r\n            let newArrayImage=[...state.images]\r\n            newArrayImage[id].likes-=1;\r\n            newArrayImage[id].likedByMe=false\r\n            return {...state,images:newArrayImage}\r\n        case SORT:\r\n            let Sorted=state.images.slice().sort((a,b)=>{\r\n                if(typeof b[action.payload]==='number'){\r\n                    return b[action.payload]-a[action.payload]\r\n                }else if(Array.isArray(a[action.payload])){\r\n                    return b[action.payload].length-a[action.payload].length\r\n                }else{\r\n                    return b[action.payload]-a[action.payload]\r\n                }\r\n            })\r\n            return {...state,images:Sorted}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default combineReducers({\r\n    images:images\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,applyMiddleware} from 'redux'\r\nimport Reducers from './reducer'\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nReactDOM.render(<Provider store={createStore(Reducers,applyMiddleware(reduxThunk))}>\r\n<App />\r\n</Provider>,document.querySelector('#root'))"],"sourceRoot":""}